{
  "address": "0xb47145c3FC2255f32a9792ca5B18D0B2C2D21772",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        }
      ],
      "name": "ReferralAnchorCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referee",
          "type": "address"
        }
      ],
      "name": "ReferralAnchorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "name": "anchorManagerUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referee",
          "type": "address"
        }
      ],
      "name": "createReferralAnchor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserReferee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "hasUserReferee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAnchorManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralAnchor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_anchorManager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        }
      ],
      "name": "updateAnchorManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referee",
          "type": "address"
        }
      ],
      "name": "updateReferralAnchor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x75f23cdc1ad40717c5a8523de778120a9bf8ab98c74d638be598067c539b8a14",
  "receipt": {
    "to": null,
    "from": "0x3Bf34B26Fc03D0ed81B6Db62dbea608F2eeD606B",
    "contractAddress": "0xb47145c3FC2255f32a9792ca5B18D0B2C2D21772",
    "transactionIndex": 2,
    "gasUsed": "491579",
    "logsBloom": "0x
    "blockHash": "0x336370a8e66c84fdff32dfb63f79eaab7c40a91ff17a13a2bf1373d136767314",
    "transactionHash": "0x75f23cdc1ad40717c5a8523de778120a9bf8ab98c74d638be598067c539b8a14",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 12150197,
        "transactionHash": "0x75f23cdc1ad40717c5a8523de778120a9bf8ab98c74d638be598067c539b8a14",
        "address": "0xb47145c3FC2255f32a9792ca5B18D0B2C2D21772",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003bf34b26fc03d0ed81b6db62dbea608f2eed606b"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x336370a8e66c84fdff32dfb63f79eaab7c40a91ff17a13a2bf1373d136767314"
      }
    ],
    "blockNumber": 12150197,
    "cumulativeGasUsed": "565802",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b06d67de1bb5155be6f17e6bd7dca5a1",
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"ReferralAnchorCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"ReferralAnchorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isManager\",\"type\":\"bool\"}],\"name\":\"anchorManagerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referee\",\"type\":\"address\"}],\"name\":\"createReferralAnchor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReferee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasUserReferee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAnchorManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralAnchor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_anchorManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isManager\",\"type\":\"bool\"}],\"name\":\"updateAnchorManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referee\",\"type\":\"address\"}],\"name\":\"updateReferralAnchor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ReferralRegistry.sol\":\"ReferralRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\"},\"contracts/ReferralRegistry.sol\":{\"content\":\"pragma solidity =0.6.6;\\n\\n// SPDX-License-Identifier: UNLICENSED\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ReferralRegistry is Ownable {\\n    event ReferralAnchorCreated(address indexed user, address indexed referee);\\n    event ReferralAnchorUpdated(address indexed user, address indexed referee);\\n    event anchorManagerUpdated(address account, bool isManager);\\n\\n    // stores accounts which are allowed to create new anchors\\n    mapping(address => bool) public isAnchorManager;\\n\\n    // stores the address that referred a given user\\n    mapping(address => address) public referralAnchor;\\n\\n    function createReferralAnchor(address _user, address _referee) external onlyAnchorManager {\\n        require(referralAnchor[_user] == address(0), \\\"ReferralRegistry: ANCHOR_EXISTS\\\");\\n        referralAnchor[_user] = _referee;\\n        emit ReferralAnchorCreated(_user, _referee);\\n    }\\n\\n    function updateReferralAnchor(address _user, address _referee) external onlyOwner {\\n        referralAnchor[_user] = _referee;\\n        emit ReferralAnchorUpdated(_user, _referee);\\n    }\\n\\n    function updateAnchorManager(address _anchorManager, bool _isManager) external onlyOwner {\\n        isAnchorManager[_anchorManager] = _isManager;\\n        emit anchorManagerUpdated(_anchorManager, _isManager);\\n    }\\n\\n    function getUserReferee(address _user) external view returns (address) {\\n        return referralAnchor[_user];\\n    }\\n\\n    function hasUserReferee(address _user) external view returns (bool) {\\n        return referralAnchor[_user] != address(0);\\n    }\\n\\n    modifier onlyAnchorManager() {\\n        require(isAnchorManager[msg.sender], \\\"ReferralRegistry: FORBIDDEN\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x9a3eb3382648aae9416d4aa95737f5f6670fdd33719ef9a3be2c4755b8aa9155\"}},\"version\":1}",
  "bytecode": "0x608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b61077f806100796000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610185578063927e897a1461018d578063b7ef8435146101b3578063d113efc4146101e1578063f2fde38b146102075761009e565b806315d557f9146100a357806364e0b159146100d35780636d7a810e14610101578063715018a61461013b578063740a63e214610143575b600080fd5b6100d1600480360360408110156100b957600080fd5b506001600160a01b038135169060200135151561022d565b005b6100d1600480360360408110156100e957600080fd5b506001600160a01b03813581169160200135166102f3565b6101276004803603602081101561011757600080fd5b50356001600160a01b031661041b565b604080519115158252519081900360200190f35b6100d1610430565b6101696004803603602081101561015957600080fd5b50356001600160a01b03166104dc565b604080516001600160a01b039092168252519081900360200190f35b6101696104f7565b610127600480360360208110156101a357600080fd5b50356001600160a01b0316610506565b6100d1600480360360408110156101c957600080fd5b506001600160a01b0381358116916020013516610526565b610169600480360360208110156101f757600080fd5b50356001600160a01b03166105df565b6100d16004803603602081101561021d57600080fd5b50356001600160a01b03166105fd565b6102356106ff565b6001600160a01b03166102466104f7565b6001600160a01b03161461028f576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915582519384529083015280517f9333898d6ddcf30fc1fe514f4580bcfa41f30f86557c4351b6493747d1a421579281900390910190a15050565b3360009081526001602052604090205460ff16610357576040805162461bcd60e51b815260206004820152601b60248201527f526566657272616c52656769737472793a20464f5242494444454e0000000000604482015290519081900360640190fd5b6001600160a01b0382811660009081526002602052604090205416156103c4576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c52656769737472793a20414e43484f525f45584953545300604482015290519081900360640190fd5b6001600160a01b0382811660008181526002602052604080822080546001600160a01b0319169486169485179055517f4389ea9d577ad3ab7faf0764f4b00da3cb150827be376c9d56dd42bd054d8b1e9190a35050565b60016020526000908152604090205460ff1681565b6104386106ff565b6001600160a01b03166104496104f7565b6001600160a01b031614610492576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002602052600090815260409020546001600160a01b031681565b6000546001600160a01b031690565b6001600160a01b0390811660009081526002602052604090205416151590565b61052e6106ff565b6001600160a01b031661053f6104f7565b6001600160a01b031614610588576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b6001600160a01b0382811660008181526002602052604080822080546001600160a01b0319169486169485179055517f90239190ef596e4d04eeffcbf6cc2232c6a13328ebbb2beb713eecce887d82be9190a35050565b6001600160a01b039081166000908152600260205260409020541690565b6106056106ff565b6001600160a01b03166106166104f7565b6001600160a01b03161461065f576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b6001600160a01b0381166106a45760405162461bcd60e51b81526004018080602001828103825260268152602001806107046026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220d54c03cec5a142778aec1408306344d4704d67889c6dcb1dd8d85c092faf7c9164736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610185578063927e897a1461018d578063b7ef8435146101b3578063d113efc4146101e1578063f2fde38b146102075761009e565b806315d557f9146100a357806364e0b159146100d35780636d7a810e14610101578063715018a61461013b578063740a63e214610143575b600080fd5b6100d1600480360360408110156100b957600080fd5b506001600160a01b038135169060200135151561022d565b005b6100d1600480360360408110156100e957600080fd5b506001600160a01b03813581169160200135166102f3565b6101276004803603602081101561011757600080fd5b50356001600160a01b031661041b565b604080519115158252519081900360200190f35b6100d1610430565b6101696004803603602081101561015957600080fd5b50356001600160a01b03166104dc565b604080516001600160a01b039092168252519081900360200190f35b6101696104f7565b610127600480360360208110156101a357600080fd5b50356001600160a01b0316610506565b6100d1600480360360408110156101c957600080fd5b506001600160a01b0381358116916020013516610526565b610169600480360360208110156101f757600080fd5b50356001600160a01b03166105df565b6100d16004803603602081101561021d57600080fd5b50356001600160a01b03166105fd565b6102356106ff565b6001600160a01b03166102466104f7565b6001600160a01b03161461028f576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915582519384529083015280517f9333898d6ddcf30fc1fe514f4580bcfa41f30f86557c4351b6493747d1a421579281900390910190a15050565b3360009081526001602052604090205460ff16610357576040805162461bcd60e51b815260206004820152601b60248201527f526566657272616c52656769737472793a20464f5242494444454e0000000000604482015290519081900360640190fd5b6001600160a01b0382811660009081526002602052604090205416156103c4576040805162461bcd60e51b815260206004820152601f60248201527f526566657272616c52656769737472793a20414e43484f525f45584953545300604482015290519081900360640190fd5b6001600160a01b0382811660008181526002602052604080822080546001600160a01b0319169486169485179055517f4389ea9d577ad3ab7faf0764f4b00da3cb150827be376c9d56dd42bd054d8b1e9190a35050565b60016020526000908152604090205460ff1681565b6104386106ff565b6001600160a01b03166104496104f7565b6001600160a01b031614610492576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002602052600090815260409020546001600160a01b031681565b6000546001600160a01b031690565b6001600160a01b0390811660009081526002602052604090205416151590565b61052e6106ff565b6001600160a01b031661053f6104f7565b6001600160a01b031614610588576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b6001600160a01b0382811660008181526002602052604080822080546001600160a01b0319169486169485179055517f90239190ef596e4d04eeffcbf6cc2232c6a13328ebbb2beb713eecce887d82be9190a35050565b6001600160a01b039081166000908152600260205260409020541690565b6106056106ff565b6001600160a01b03166106166104f7565b6001600160a01b03161461065f576040805162461bcd60e51b8152602060048201819052602482015260008051602061072a833981519152604482015290519081900360640190fd5b6001600160a01b0381166106a45760405162461bcd60e51b81526004018080602001828103825260268152602001806107046026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220d54c03cec5a142778aec1408306344d4704d67889c6dcb1dd8d85c092faf7c9164736f6c63430006060033",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ReferralRegistry.sol:ReferralRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3700,
        "contract": "contracts/ReferralRegistry.sol:ReferralRegistry",
        "label": "isAnchorManager",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3704,
        "contract": "contracts/ReferralRegistry.sol:ReferralRegistry",
        "label": "referralAnchor",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}