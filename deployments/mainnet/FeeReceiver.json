{
  "address": "0x067002853C4Edf4016A476fD5dB9b8Ae3890F9d8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPancakeRouter02",
          "name": "_pancakeRouterV2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_SYA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_revenueReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_buybackRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBuyback",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountRevenue",
          "type": "uint256"
        }
      ],
      "name": "BuybackExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBuybackRate",
          "type": "uint256"
        }
      ],
      "name": "BuybackRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newRevenueReceiver",
          "type": "address"
        }
      ],
      "name": "RevenueReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "RouterWhitelistUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buybackRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_fee",
          "type": "bool"
        }
      ],
      "name": "convertToETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeBuyback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pancakeRouter",
      "outputs": [
        {
          "internalType": "contract IPancakeRouter02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revenueReceiver",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "routerWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unwrapWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newBuybackRate",
          "type": "uint256"
        }
      ],
      "name": "updateBuybackRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newRevenueReceiver",
          "type": "address"
        }
      ],
      "name": "updateRevenueReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "updateRouterWhiteliste",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20Token",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2894ec3120e0081323a3b969989177c574edbdb03ea68e96a1a804db066ccbea",
  "receipt": {
    "to": null,
    "from": "0x3Bf34B26Fc03D0ed81B6Db62dbea608F2eeD606B",
    "contractAddress": "0x067002853C4Edf4016A476fD5dB9b8Ae3890F9d8",
    "transactionIndex": 216,
    "gasUsed": "1578734",
    "logsBloom": "0x
    "blockHash": "0x6a141892b9d46f13f48d158889df534fd8cc226f65bef141070b64c6a0ec95fa",
    "transactionHash": "0x2894ec3120e0081323a3b969989177c574edbdb03ea68e96a1a804db066ccbea",
    "logs": [
      {
        "transactionIndex": 216,
        "blockNumber": 11793494,
        "transactionHash": "0x2894ec3120e0081323a3b969989177c574edbdb03ea68e96a1a804db066ccbea",
        "address": "0x067002853C4Edf4016A476fD5dB9b8Ae3890F9d8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003bf34b26fc03d0ed81b6db62dbea608f2eed606b"
        ],
        "data": "0x",
        "logIndex": 757,
        "blockHash": "0x6a141892b9d46f13f48d158889df534fd8cc226f65bef141070b64c6a0ec95fa"
      }
    ],
    "blockNumber": 11793494,
    "cumulativeGasUsed": "32133999",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x10ED43C718714eb63d5aA57B78B54704E256024E",
    "0x83A86adf1a7c56e77d36d585B808052e0a2aAD0e",
    "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    "0x616b9E8ebf9cAc11E751713f3d765Cc22cC7d1D5",
    5000
  ],
  "solcInputHash": "411ff5847ac1b4d47015c8d8ea32aed6",
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPancakeRouter02\",\"name\":\"_pancakeRouterV2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_SYA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_revenueReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buybackRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBuyback\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountRevenue\",\"type\":\"uint256\"}],\"name\":\"BuybackExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuybackRate\",\"type\":\"uint256\"}],\"name\":\"BuybackRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRevenueReceiver\",\"type\":\"address\"}],\"name\":\"RevenueReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"RouterWhitelistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_fee\",\"type\":\"bool\"}],\"name\":\"convertToETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeBuyback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeRouter\",\"outputs\":[{\"internalType\":\"contract IPancakeRouter02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revenueReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"routerWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newBuybackRate\",\"type\":\"uint256\"}],\"name\":\"updateBuybackRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newRevenueReceiver\",\"type\":\"address\"}],\"name\":\"updateRevenueReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"updateRouterWhiteliste\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20Token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"convertToETH(address,address,bool)\":{\"details\":\"converts collected tokens from fees to ETH for executing buybacks\"},\"executeBuyback()\":{\"details\":\"executes the buyback, buys SYA on pancake & sends revenue to the revenueReceiver by the defined rate.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"lets the owner pause the contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"lets the owner unpause the contract\"},\"unwrapWETH()\":{\"details\":\"converts WETH to ETH\"},\"updateBuybackRate(uint256)\":{\"details\":\"lets the owner update the buyback rate\"},\"updateRevenueReceiver(address)\":{\"details\":\"lets the owner update the revenue receiver address\"},\"updateRouterWhiteliste(address,bool)\":{\"details\":\"lets the owner update update the router whitelist\"},\"withdrawERC20Token(address,address,uint256)\":{\"details\":\"lets the owner withdraw any ERC20 Token from the contract\"},\"withdrawETH(address,uint256)\":{\"details\":\"lets the owner withdraw ETH from the contract\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FeeReceiver.sol\":\"FeeReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () internal {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\"},\"contracts/FeeReceiver.sol\":{\"content\":\"pragma solidity =0.6.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/IPancakeRouter02.sol\\\";\\nimport \\\"./interfaces/IWETH.sol\\\";\\n\\ncontract FeeReceiver is Pausable, Ownable {\\n    using SafeMath for uint256;\\n\\n    event BuybackRateUpdated(uint256 newBuybackRate);\\n    event RevenueReceiverUpdated(address newRevenueReceiver);\\n    event RouterWhitelistUpdated(address router, bool status);\\n    event BuybackExecuted(uint256 amountBuyback, uint256 amountRevenue);\\n\\n    address internal constant ZERO_ADDRESS = address(0);\\n    uint256 public constant FEE_DENOMINATOR = 10000;\\n    IPancakeRouter02 public pancakeRouter;\\n    address payable public revenueReceiver;\\n    uint256 public buybackRate;\\n    address public SYA;\\n    address public WETH;\\n\\n    mapping(address => bool) public routerWhitelist;\\n\\n    constructor(\\n        IPancakeRouter02 _pancakeRouterV2,\\n        address _SYA,\\n        address _WETH,\\n        address payable _revenueReceiver,\\n        uint256 _buybackRate\\n    ) public {\\n        pancakeRouter = _pancakeRouterV2;\\n        SYA = _SYA;\\n        WETH = _WETH;\\n        revenueReceiver = _revenueReceiver;\\n        buybackRate = _buybackRate;\\n        routerWhitelist[address(pancakeRouter)] = true;\\n    }\\n\\n    /// @dev executes the buyback, buys SYA on pancake & sends revenue to the revenueReceiver by the defined rate.\\n    function executeBuyback() external whenNotPaused {\\n        require(address(this).balance > 0, \\\"FeeReceiver: No balance for buyback\\\");\\n        address[] memory path = new address[](2);\\n        path[0] = WETH;\\n        path[1] = SYA;\\n\\n        uint256 balance = address(this).balance;\\n        uint256 amountBuyback = balance.mul(buybackRate).div(FEE_DENOMINATOR);\\n        uint256 amountRevenue = balance.sub(amountBuyback);\\n\\n        pancakeRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amountBuyback}(\\n            0,\\n            path,\\n            ZERO_ADDRESS,\\n            block.timestamp\\n        );\\n        TransferHelper.safeTransferETH(revenueReceiver, amountRevenue);\\n        emit BuybackExecuted(amountBuyback, amountRevenue);\\n    }\\n\\n    /// @dev converts collected tokens from fees to ETH for executing buybacks\\n    function convertToETH(\\n        address _router,\\n        IERC20 _token,\\n        bool _fee\\n    ) public whenNotPaused {\\n        require(routerWhitelist[_router], \\\"FeeReceiver: Router not whitelisted\\\");\\n        address[] memory path = new address[](2);\\n        path[0] = address(_token);\\n        path[1] = WETH;\\n\\n        uint256 balance = _token.balanceOf(address(this));\\n        TransferHelper.safeApprove(address(_token), address(pancakeRouter), balance);\\n        if (_fee) {\\n            IPancakeRouter02(_router).swapExactTokensForETHSupportingFeeOnTransferTokens(\\n                balance,\\n                0,\\n                path,\\n                address(this),\\n                block.timestamp\\n            );\\n        } else {\\n            IPancakeRouter02(_router).swapExactTokensForETH(balance, 0, path, address(this), block.timestamp);\\n        }\\n    }\\n\\n    /// @dev converts WETH to ETH\\n    function unwrapWETH() public whenNotPaused {\\n        uint256 balance = IWETH(WETH).balanceOf(address(this));\\n        require(balance > 0, \\\"FeeReceiver: Nothing to unwrap\\\");\\n        IWETH(WETH).withdraw(balance);\\n    }\\n\\n    /// @dev lets the owner update update the router whitelist\\n    function updateRouterWhiteliste(address _router, bool _status) external onlyOwner {\\n        routerWhitelist[_router] = _status;\\n        emit RouterWhitelistUpdated(_router, _status);\\n    }\\n\\n    /// @dev lets the owner update the buyback rate\\n    function updateBuybackRate(uint256 _newBuybackRate) external onlyOwner {\\n        buybackRate = _newBuybackRate;\\n        emit BuybackRateUpdated(_newBuybackRate);\\n    }\\n\\n    /// @dev lets the owner update the revenue receiver address\\n    function updateRevenueReceiver(address payable _newRevenueReceiver) external onlyOwner {\\n        revenueReceiver = _newRevenueReceiver;\\n        emit RevenueReceiverUpdated(_newRevenueReceiver);\\n    }\\n\\n    /// @dev lets the owner withdraw ETH from the contract\\n    function withdrawETH(address payable to, uint256 amount) external onlyOwner {\\n        to.transfer(amount);\\n    }\\n\\n    /// @dev lets the owner withdraw any ERC20 Token from the contract\\n    function withdrawERC20Token(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) external onlyOwner {\\n        IERC20(token).transfer(to, amount);\\n    }\\n\\n    /// @dev allows to receive ETH on this contract\\n    receive() external payable {}\\n\\n    /// @dev lets the owner pause the contract\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /// @dev lets the owner unpause the contract\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n}\\n\",\"keccak256\":\"0x8c643f1dbae85300ed92af86d5d643a97f8f031c7d602a5b29eb6a6f88514ab7\"},\"contracts/interfaces/IPancakeRouter01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IPancakeRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0xfa22e01adaeb9ea5a8ee0b5c437dd232b1e4a3f7203bc317e4425bd06b801f3b\"},\"contracts/interfaces/IPancakeRouter02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport \\\"./IPancakeRouter01.sol\\\";\\n\\ninterface IPancakeRouter02 is IPancakeRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x0dc9adf129ebd3c2846f29cc6a368a98178c28e092ee722117588b8aee2c3da2\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function withdraw(uint256) external;\\n\\n    function approve(address _spender, uint256 _amount) external returns (bool);\\n\\n    function balanceOf(address _account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd0ade614a95b3c690c2714d314d10a936f97afe97e05efe1b74e632dcce01ca6\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"pragma solidity =0.6.6;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x05883189981669420f159c9f6c45e7455240a719d710e4bf4b0c74771e354d47\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611a14380380611a14833981810160405260a081101561003357600080fd5b5080516020820151604083015160608401516080909401516000805460ff191681559394929391929161006d6001600160e01b0361013516565b60008054610100600160a81b0319166101006001600160a01b038416908102919091178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b03978816178083556004805483169789169790971790965560058054821695881695909517909455600280549094169286169290921790925560039190915591166000908152600660205260409020805460ff19169091179055610139565b3390565b6118cc806101486000396000f3fe60806040526004361061013e5760003560e01c80638da5cb5b116100bb578063c21ebd071161007f578063e6146ad411610059578063e6146ad414610401578063f2fde38b14610416578063f76024c41461044957610145565b8063c21ebd0714610392578063cb4bef57146103a7578063d73792a9146103da57610145565b80638da5cb5b146102e75780638e10e77a14610318578063ad5c46481461032d578063ae52e04a14610342578063ae5ab6421461035757610145565b80635c975abb116101025780635c975abb1461021c57806363cbb14514610245578063655ca83d14610278578063715018a6146102bd5780638456cb59146102d257610145565b80630d9122d31461014a578063385ad0a4146101765780633f4ba83a1461018b5780634782f779146101a057806357d1b31b146101d957610145565b3661014557005b600080fd5b34801561015657600080fd5b506101746004803603602081101561016d57600080fd5b503561045e565b005b34801561018257600080fd5b506101746104fb565b34801561019757600080fd5b5061017461067b565b3480156101ac57600080fd5b50610174600480360360408110156101c357600080fd5b506001600160a01b0381351690602001356106e7565b3480156101e557600080fd5b50610174600480360360608110156101fc57600080fd5b506001600160a01b03813581169160208101359091169060400135610784565b34801561022857600080fd5b50610231610870565b604080519115158252519081900360200190f35b34801561025157600080fd5b506102316004803603602081101561026857600080fd5b50356001600160a01b0316610879565b34801561028457600080fd5b506101746004803603606081101561029b57600080fd5b506001600160a01b03813581169160208101359091169060400135151561088e565b3480156102c957600080fd5b50610174610c8b565b3480156102de57600080fd5b50610174610d3c565b3480156102f357600080fd5b506102fc610da6565b604080516001600160a01b039092168252519081900360200190f35b34801561032457600080fd5b50610174610dba565b34801561033957600080fd5b506102fc611027565b34801561034e57600080fd5b506102fc611036565b34801561036357600080fd5b506101746004803603604081101561037a57600080fd5b506001600160a01b0381351690602001351515611045565b34801561039e57600080fd5b506102fc61110b565b3480156103b357600080fd5b50610174600480360360208110156103ca57600080fd5b50356001600160a01b031661111a565b3480156103e657600080fd5b506103ef6111dd565b60408051918252519081900360200190f35b34801561040d57600080fd5b506102fc6111e3565b34801561042257600080fd5b506101746004803603602081101561043957600080fd5b50356001600160a01b03166111f2565b34801561045557600080fd5b506103ef6112ff565b610466611305565b6001600160a01b0316610477610da6565b6001600160a01b0316146104c0576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b60038190556040805182815290517fcc694eb069971c6c91f6c905b0f66a7a6322a90a42f3904b7508e7b9336a7dfe9181900360200190a150565b610503610870565b15610548576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d60208110156105bd57600080fd5b5051905080610613576040805162461bcd60e51b815260206004820152601e60248201527f46656552656365697665723a204e6f7468696e6720746f20756e777261700000604482015290519081900360640190fd5b60055460408051632e1a7d4d60e01b81526004810184905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b5050505050565b610683611305565b6001600160a01b0316610694610da6565b6001600160a01b0316146106dd576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6106e5611309565b565b6106ef611305565b6001600160a01b0316610700610da6565b6001600160a01b031614610749576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561077f573d6000803e3d6000fd5b505050565b61078c611305565b6001600160a01b031661079d610da6565b6001600160a01b0316146107e6576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b505050506040513d602081101561067457600080fd5b60005460ff1690565b60066020526000908152604090205460ff1681565b610896610870565b156108db576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b03831660009081526006602052604090205460ff166109325760405162461bcd60e51b81526004018080602001828103825260238152602001806117ed6023913960400191505060405180910390fd5b6040805160028082526060808301845292602083019080368337019050509050828160008151811061096057fe5b6001600160a01b03928316602091820292909201015260055482519116908290600190811061098b57fe5b6001600160a01b03928316602091820292909201810191909152604080516370a0823160e01b815230600482015290516000938716926370a082319260248082019391829003018186803b1580156109e257600080fd5b505afa1580156109f6573d6000803e3d6000fd5b505050506040513d6020811015610a0c57600080fd5b5051600154909150610a299085906001600160a01b0316836113b2565b8215610b0357846001600160a01b031663791ac9478260008530426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610abd578181015183820152602001610aa5565b505050509050019650505050505050600060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b50505050610674565b846001600160a01b03166318cbafe58260008530426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610b91578181015183820152602001610b79565b505050509050019650505050505050600060405180830381600087803b158015610bba57600080fd5b505af1158015610bce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610bf757600080fd5b8101908080516040519392919084640100000000821115610c1757600080fd5b908301906020820185811115610c2c57600080fd5b8251866020820283011164010000000082111715610c4957600080fd5b82525081516020918201928201910280838360005b83811015610c76578181015183820152602001610c5e565b50505050905001604052505050505050505050565b610c93611305565b6001600160a01b0316610ca4610da6565b6001600160a01b031614610ced576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b600080546040516101009091046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360008054610100600160a81b0319169055565b610d44611305565b6001600160a01b0316610d55610da6565b6001600160a01b031614610d9e576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6106e561152a565b60005461010090046001600160a01b031690565b610dc2610870565b15610e07576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60004711610e465760405162461bcd60e51b81526004018080602001828103825260238152602001806118746023913960400191505060405180910390fd5b6040805160028082526060808301845292602083019080368337505060055482519293506001600160a01b031691839150600090610e8057fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110610eab57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060004790506000610ef9612710610eed600354856115ad90919063ffffffff16565b9063ffffffff61160f16565b90506000610f0d838363ffffffff61167616565b60015460405163b6f9de9560e01b81526000600482018181526044830182905242606484018190526080602485019081528a5160848601528a519697506001600160a01b039095169563b6f9de959589958c9486949390929160a4019060208088019102808383895b83811015610f8e578181015183820152602001610f76565b50505050905001955050505050506000604051808303818588803b158015610fb557600080fd5b505af1158015610fc9573d6000803e3d6000fd5b5050600254610fe693506001600160a01b031691508390506116d3565b604080518381526020810183905281517f8e8412cac6b961b95ef832e2bac486977bbd29eb9725f9eddd97f3380c31f649929181900390910190a150505050565b6005546001600160a01b031681565b6002546001600160a01b031681565b61104d611305565b6001600160a01b031661105e610da6565b6001600160a01b0316146110a7576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260066020908152604091829020805460ff191685151590811790915582519384529083015280517f7dfa5a39e8d4ab2d330416cdd5102e73066069ba1c76ec335cc47727a07fe7989281900390910190a15050565b6001546001600160a01b031681565b611122611305565b6001600160a01b0316611133610da6565b6001600160a01b03161461117c576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b600280546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f08dac497db2e0e95e33c25bcfe70ee26183653b113f9bdc563104589c5e90d369181900360200190a150565b61271081565b6004546001600160a01b031681565b6111fa611305565b6001600160a01b031661120b610da6565b6001600160a01b031614611254576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6001600160a01b0381166112995760405162461bcd60e51b81526004018080602001828103825260268152602001806117c76026913960400191505060405180910390fd5b600080546040516001600160a01b038085169361010090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60035481565b3390565b611311610870565b611362576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611395611305565b604080516001600160a01b039092168252519081900360200190a1565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b178152925182516000946060949389169392918291908083835b602083106114445780518252601f199092019160209182019101611425565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146114a6576040519150601f19603f3d011682016040523d82523d6000602084013e6114ab565b606091505b50915091508180156114d95750805115806114d957508080602001905160208110156114d657600080fd5b50515b610674576040805162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c45440000604482015290519081900360640190fd5b611532610870565b15611577576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611395611305565b6000826115bc57506000611609565b828202828482816115c957fe5b04146116065760405162461bcd60e51b81526004018080602001828103825260218152602001806118106021913960400191505060405180910390fd5b90505b92915050565b6000808211611665576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161166e57fe5b049392505050565b6000828211156116cd576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b6020831061171f5780518252601f199092019160209182019101611700565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611781576040519150601f19603f3d011682016040523d82523d6000602084013e611786565b606091505b505090508061077f5760405162461bcd60e51b81526004018080602001828103825260238152602001806118516023913960400191505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737346656552656365697665723a20526f75746572206e6f742077686974656c6973746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725472616e7366657248656c7065723a204554485f5452414e534645525f4641494c454446656552656365697665723a204e6f2062616c616e636520666f72206275796261636ba2646970667358221220a77c8bef005fff5c95bf656b114ea2c482679025bf75a6ba458d909132c2a5d264736f6c63430006060033",
  "deployedBytecode": "0x60806040526004361061013e5760003560e01c80638da5cb5b116100bb578063c21ebd071161007f578063e6146ad411610059578063e6146ad414610401578063f2fde38b14610416578063f76024c41461044957610145565b8063c21ebd0714610392578063cb4bef57146103a7578063d73792a9146103da57610145565b80638da5cb5b146102e75780638e10e77a14610318578063ad5c46481461032d578063ae52e04a14610342578063ae5ab6421461035757610145565b80635c975abb116101025780635c975abb1461021c57806363cbb14514610245578063655ca83d14610278578063715018a6146102bd5780638456cb59146102d257610145565b80630d9122d31461014a578063385ad0a4146101765780633f4ba83a1461018b5780634782f779146101a057806357d1b31b146101d957610145565b3661014557005b600080fd5b34801561015657600080fd5b506101746004803603602081101561016d57600080fd5b503561045e565b005b34801561018257600080fd5b506101746104fb565b34801561019757600080fd5b5061017461067b565b3480156101ac57600080fd5b50610174600480360360408110156101c357600080fd5b506001600160a01b0381351690602001356106e7565b3480156101e557600080fd5b50610174600480360360608110156101fc57600080fd5b506001600160a01b03813581169160208101359091169060400135610784565b34801561022857600080fd5b50610231610870565b604080519115158252519081900360200190f35b34801561025157600080fd5b506102316004803603602081101561026857600080fd5b50356001600160a01b0316610879565b34801561028457600080fd5b506101746004803603606081101561029b57600080fd5b506001600160a01b03813581169160208101359091169060400135151561088e565b3480156102c957600080fd5b50610174610c8b565b3480156102de57600080fd5b50610174610d3c565b3480156102f357600080fd5b506102fc610da6565b604080516001600160a01b039092168252519081900360200190f35b34801561032457600080fd5b50610174610dba565b34801561033957600080fd5b506102fc611027565b34801561034e57600080fd5b506102fc611036565b34801561036357600080fd5b506101746004803603604081101561037a57600080fd5b506001600160a01b0381351690602001351515611045565b34801561039e57600080fd5b506102fc61110b565b3480156103b357600080fd5b50610174600480360360208110156103ca57600080fd5b50356001600160a01b031661111a565b3480156103e657600080fd5b506103ef6111dd565b60408051918252519081900360200190f35b34801561040d57600080fd5b506102fc6111e3565b34801561042257600080fd5b506101746004803603602081101561043957600080fd5b50356001600160a01b03166111f2565b34801561045557600080fd5b506103ef6112ff565b610466611305565b6001600160a01b0316610477610da6565b6001600160a01b0316146104c0576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b60038190556040805182815290517fcc694eb069971c6c91f6c905b0f66a7a6322a90a42f3904b7508e7b9336a7dfe9181900360200190a150565b610503610870565b15610548576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d60208110156105bd57600080fd5b5051905080610613576040805162461bcd60e51b815260206004820152601e60248201527f46656552656365697665723a204e6f7468696e6720746f20756e777261700000604482015290519081900360640190fd5b60055460408051632e1a7d4d60e01b81526004810184905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b5050505050565b610683611305565b6001600160a01b0316610694610da6565b6001600160a01b0316146106dd576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6106e5611309565b565b6106ef611305565b6001600160a01b0316610700610da6565b6001600160a01b031614610749576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561077f573d6000803e3d6000fd5b505050565b61078c611305565b6001600160a01b031661079d610da6565b6001600160a01b0316146107e6576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b505050506040513d602081101561067457600080fd5b60005460ff1690565b60066020526000908152604090205460ff1681565b610896610870565b156108db576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b03831660009081526006602052604090205460ff166109325760405162461bcd60e51b81526004018080602001828103825260238152602001806117ed6023913960400191505060405180910390fd5b6040805160028082526060808301845292602083019080368337019050509050828160008151811061096057fe5b6001600160a01b03928316602091820292909201015260055482519116908290600190811061098b57fe5b6001600160a01b03928316602091820292909201810191909152604080516370a0823160e01b815230600482015290516000938716926370a082319260248082019391829003018186803b1580156109e257600080fd5b505afa1580156109f6573d6000803e3d6000fd5b505050506040513d6020811015610a0c57600080fd5b5051600154909150610a299085906001600160a01b0316836113b2565b8215610b0357846001600160a01b031663791ac9478260008530426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610abd578181015183820152602001610aa5565b505050509050019650505050505050600060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b50505050610674565b846001600160a01b03166318cbafe58260008530426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610b91578181015183820152602001610b79565b505050509050019650505050505050600060405180830381600087803b158015610bba57600080fd5b505af1158015610bce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610bf757600080fd5b8101908080516040519392919084640100000000821115610c1757600080fd5b908301906020820185811115610c2c57600080fd5b8251866020820283011164010000000082111715610c4957600080fd5b82525081516020918201928201910280838360005b83811015610c76578181015183820152602001610c5e565b50505050905001604052505050505050505050565b610c93611305565b6001600160a01b0316610ca4610da6565b6001600160a01b031614610ced576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b600080546040516101009091046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360008054610100600160a81b0319169055565b610d44611305565b6001600160a01b0316610d55610da6565b6001600160a01b031614610d9e576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6106e561152a565b60005461010090046001600160a01b031690565b610dc2610870565b15610e07576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60004711610e465760405162461bcd60e51b81526004018080602001828103825260238152602001806118746023913960400191505060405180910390fd5b6040805160028082526060808301845292602083019080368337505060055482519293506001600160a01b031691839150600090610e8057fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110610eab57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060004790506000610ef9612710610eed600354856115ad90919063ffffffff16565b9063ffffffff61160f16565b90506000610f0d838363ffffffff61167616565b60015460405163b6f9de9560e01b81526000600482018181526044830182905242606484018190526080602485019081528a5160848601528a519697506001600160a01b039095169563b6f9de959589958c9486949390929160a4019060208088019102808383895b83811015610f8e578181015183820152602001610f76565b50505050905001955050505050506000604051808303818588803b158015610fb557600080fd5b505af1158015610fc9573d6000803e3d6000fd5b5050600254610fe693506001600160a01b031691508390506116d3565b604080518381526020810183905281517f8e8412cac6b961b95ef832e2bac486977bbd29eb9725f9eddd97f3380c31f649929181900390910190a150505050565b6005546001600160a01b031681565b6002546001600160a01b031681565b61104d611305565b6001600160a01b031661105e610da6565b6001600160a01b0316146110a7576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260066020908152604091829020805460ff191685151590811790915582519384529083015280517f7dfa5a39e8d4ab2d330416cdd5102e73066069ba1c76ec335cc47727a07fe7989281900390910190a15050565b6001546001600160a01b031681565b611122611305565b6001600160a01b0316611133610da6565b6001600160a01b03161461117c576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b600280546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f08dac497db2e0e95e33c25bcfe70ee26183653b113f9bdc563104589c5e90d369181900360200190a150565b61271081565b6004546001600160a01b031681565b6111fa611305565b6001600160a01b031661120b610da6565b6001600160a01b031614611254576040805162461bcd60e51b81526020600482018190526024820152600080516020611831833981519152604482015290519081900360640190fd5b6001600160a01b0381166112995760405162461bcd60e51b81526004018080602001828103825260268152602001806117c76026913960400191505060405180910390fd5b600080546040516001600160a01b038085169361010090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60035481565b3390565b611311610870565b611362576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611395611305565b604080516001600160a01b039092168252519081900360200190a1565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b178152925182516000946060949389169392918291908083835b602083106114445780518252601f199092019160209182019101611425565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146114a6576040519150601f19603f3d011682016040523d82523d6000602084013e6114ab565b606091505b50915091508180156114d95750805115806114d957508080602001905160208110156114d657600080fd5b50515b610674576040805162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c45440000604482015290519081900360640190fd5b611532610870565b15611577576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611395611305565b6000826115bc57506000611609565b828202828482816115c957fe5b04146116065760405162461bcd60e51b81526004018080602001828103825260218152602001806118106021913960400191505060405180910390fd5b90505b92915050565b6000808211611665576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161166e57fe5b049392505050565b6000828211156116cd576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b6020831061171f5780518252601f199092019160209182019101611700565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611781576040519150601f19603f3d011682016040523d82523d6000602084013e611786565b606091505b505090508061077f5760405162461bcd60e51b81526004018080602001828103825260238152602001806118516023913960400191505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737346656552656365697665723a20526f75746572206e6f742077686974656c6973746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725472616e7366657248656c7065723a204554485f5452414e534645525f4641494c454446656552656365697665723a204e6f2062616c616e636520666f72206275796261636ba2646970667358221220a77c8bef005fff5c95bf656b114ea2c482679025bf75a6ba458d909132c2a5d264736f6c63430006060033",
  "devdoc": {
    "methods": {
      "convertToETH(address,address,bool)": {
        "details": "converts collected tokens from fees to ETH for executing buybacks"
      },
      "executeBuyback()": {
        "details": "executes the buyback, buys SYA on pancake & sends revenue to the revenueReceiver by the defined rate."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "lets the owner pause the contract"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "lets the owner unpause the contract"
      },
      "unwrapWETH()": {
        "details": "converts WETH to ETH"
      },
      "updateBuybackRate(uint256)": {
        "details": "lets the owner update the buyback rate"
      },
      "updateRevenueReceiver(address)": {
        "details": "lets the owner update the revenue receiver address"
      },
      "updateRouterWhiteliste(address,bool)": {
        "details": "lets the owner update update the router whitelist"
      },
      "withdrawERC20Token(address,address,uint256)": {
        "details": "lets the owner withdraw any ERC20 Token from the contract"
      },
      "withdrawETH(address,uint256)": {
        "details": "lets the owner withdraw ETH from the contract"
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1168,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 592,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "_owner",
        "offset": 1,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1329,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "pancakeRouter",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPancakeRouter02)5227"
      },
      {
        "astId": 1331,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "revenueReceiver",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 1333,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "buybackRate",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1335,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "SYA",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1337,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "WETH",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1341,
        "contract": "contracts/FeeReceiver.sol:FeeReceiver",
        "label": "routerWhitelist",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IPancakeRouter02)5227": {
        "encoding": "inplace",
        "label": "contract IPancakeRouter02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}